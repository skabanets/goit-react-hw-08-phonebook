{"version":3,"file":"static/js/93.71130273.chunk.js","mappings":"kSAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uSAalBC,EAAaH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6HASzBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+CAKpBK,EAAaP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2M,6BCpB1BO,EAAc,WACzB,IAAAC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAC1BC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAACrB,EAAI,CAACsB,SAAUR,GAPH,SAAAS,ICdU,SAACC,EAAMR,GAChC,IAAMS,EAAUT,EAASU,MACvB,SAAAC,GAAO,OAAIA,EAAQH,KAAKI,gBAAkBJ,EAAKI,aAAa,IAO9D,OAJIH,GACFI,MAAM,GAADC,OAAIN,EAAI,6BAGRC,CACT,EDKQM,CAAYR,EAAKC,KAAMR,KAC3BG,GAASa,EAAAA,EAAAA,IAAWT,IACpBR,IACF,IAGuCkB,SAAA,EACnCZ,EAAAA,EAAAA,MAACjB,EAAU,CAAA6B,SAAA,CAAC,QAEVC,EAAAA,EAAAA,KAAC5B,GAAK6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAtB,EAAS,SAAO,IACpBuB,KAAK,OACLC,UAAQ,EACRC,YAAY,qBACZC,UAAW,SAGflB,EAAAA,EAAAA,MAACjB,EAAU,CAAA6B,SAAA,CAAC,UAEVC,EAAAA,EAAAA,KAAC5B,GAAK6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAtB,EAAS,WAAS,IACtBuB,KAAK,MACLC,UAAQ,EACRE,UAAW,EACXC,UAAW,GACXF,YAAY,4BAGhBJ,EAAAA,EAAAA,KAAC1B,EAAU,CAAAyB,SAAC,kBAGlB,EE5CaQ,EAAcxC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFAOvBuC,EAAczC,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0MAWvBwC,EAAc1C,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0CAKxByC,EAAmB3C,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0KAUhC0C,EAAqB5C,EAAAA,GAAAA,EAAQ6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,yB,UCrB7B4C,EAAW,WACtB,IAAM/B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB8B,GAAS/B,EAAAA,EAAAA,IAAYgC,EAAAA,IACrB9B,GAAWC,EAAAA,EAAAA,MAMX8B,EAHGlC,EAASgC,QAAO,SAAArB,GAAO,OAAIA,EAAQH,KAAKI,cAAcuB,SAASH,EAAOpB,cAAc,IAK7F,OACEM,EAAAA,EAAAA,KAACO,EAAW,CAAAR,SACmB,IAA5BiB,EAAiBE,OAChBF,EAAiBG,KAAI,SAAAC,GAAI,OACvBjC,EAAAA,EAAAA,MAACqB,EAAW,CAAAT,SAAA,EACVZ,EAAAA,EAAAA,MAACsB,EAAW,CAAAV,SAAA,EACVC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNZ,EAAAA,EAAAA,MAAA,QAAAY,SAAA,CACGqB,EAAK9B,KAAK,KAAG8B,EAAKC,cAGvBrB,EAAAA,EAAAA,KAACU,EAAgB,CAACR,KAAK,SAASoB,QAAS,kBAAMrC,GAASsC,EAAAA,EAAAA,IAAcH,EAAKI,IAAI,EAACzB,SAAC,aAPjEqB,EAAKI,GAUT,KAGhBxB,EAAAA,EAAAA,KAACW,EAAkB,CAAAZ,SAAC,6CAI5B,EC5Ca0B,EAAmB1D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uCAI7ByD,EAAQ3D,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oCAIjB0D,EAAW5D,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6BCRpB2D,EAAe7D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAQzB4D,EAAc9D,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6GAQ1B6D,EAAc/D,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+CAK1B8D,EAAWhE,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4NCjBxB+D,EAAS,WACpB,IAAM/C,GAAWC,EAAAA,EAAAA,MACX4B,GAAS/B,EAAAA,EAAAA,IAAYgC,EAAAA,IAE3B,OACE5B,EAAAA,EAAAA,MAACyC,EAAY,CAAA7B,SAAA,EACXZ,EAAAA,EAAAA,MAAC0C,EAAW,CAAA9B,SAAA,CAAC,yBAEXC,EAAAA,EAAAA,KAAC8B,EAAW,CACV5B,KAAK,OACL+B,MAAOnB,EACPoB,SAAU,SAAAC,GAAC,OAAIlD,GAASmD,EAAAA,EAAAA,IAAaD,EAAEE,OAAOJ,OAAO,QAGzDjC,EAAAA,EAAAA,KAAC+B,EAAQ,CAAC7B,KAAK,SAASoB,QAAS,kBAAMrC,GAASqD,EAAAA,EAAAA,MAAc,EAACvC,SAAC,YAKtE,E,UCZawC,EAAY,WACvB,IAAMzD,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBwD,GAAYzD,EAAAA,EAAAA,IAAY0D,EAAAA,IACxBC,GAAQ3D,EAAAA,EAAAA,IAAY4D,EAAAA,IAEpB1D,GAAWC,EAAAA,EAAAA,MAMjB,OAJA0D,EAAAA,EAAAA,YAAU,WACR3D,GAAS4D,EAAAA,EAAAA,MACX,GAAG,CAAC5D,IAEAuD,GACKxC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,KAGZJ,GACFK,EAAAA,GAAAA,MAAY,0DAIZ5D,EAAAA,EAAAA,MAACsC,EAAgB,CAAA1B,SAAA,EACfC,EAAAA,EAAAA,KAAC0B,EAAK,CAACsB,UAAU,iCAAgCjD,SAAC,eAClDC,EAAAA,EAAAA,KAACxB,EAAW,KACZW,EAAAA,EAAAA,MAACwC,EAAQ,CAAA5B,SAAA,CAAC,aAAWjB,EAASoC,OAAO,QACrClB,EAAAA,EAAAA,KAACgC,EAAM,IACNlD,EAASoC,QAASlB,EAAAA,EAAAA,KAACa,EAAQ,KAAMb,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBAG3C,EC/BA,EARqB,WACnB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACuC,EAAS,KAGhB,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","helpers/findContact.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Phonebook/Phonebook.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  padding: 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n  width: 400px;\n  background-color: #d3e29d;\n  /* box-shadow: 0 14px 28px rgba(0, 0, 0, 0.2), 0 10px 10px rgba(0, 0, 0, 0.16); */\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 20px;\n  font-weight: 400;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  font-size: 16px;\n`;\n\nexport const FormButton = styled.button`\n  padding: 8px 16px;\n  color: white;\n  background-color: #8ab446;\n  border-radius: 5px;\n  border: 1px solid green;\n  font-weight: 500;\n\n  &:hover {\n    background-color: #778d45;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { Form, FormButton, Input, InputLabel } from './ContactForm.styled';\n\nimport { findContact } from 'helpers/findContact';\nimport { selectContacts } from '../../redux/contacts/slice';\nimport { addContact } from '../../redux/contacts/operation';\n\nexport const ContactForm = () => {\n  const { register, handleSubmit, reset } = useForm();\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const submit = data => {\n    if (findContact(data.name, contacts)) return;\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(submit)}>\n      <InputLabel>\n        Name\n        <Input\n          {...register('name')}\n          type=\"text\"\n          required\n          placeholder=\"Enter contact name\"\n          minLength={3}\n        />\n      </InputLabel>\n      <InputLabel>\n        Number\n        <Input\n          {...register('number')}\n          type=\"tel\"\n          required\n          minLength={9}\n          maxLength={13}\n          placeholder=\"Enter phone number\"\n        />\n      </InputLabel>\n      <FormButton>Add contact</FormButton>\n    </Form>\n  );\n};\n","export const findContact = (name, contacts) => {\n  const isExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  if (isExist) {\n    alert(`${name} is already in contacts.`);\n  }\n\n  return isExist;\n};\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 400px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  width: 100%;\n  background-color: #f2f2ef;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const DeleteContactBtn = styled.button`\n  padding: 1px 2px;\n  border: 1px solid black;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 500;\n  background-color: #f34c3f;\n  color: white;\n`;\n\nexport const FilterErrorMessage = styled.p`\n  color: red;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  ContactInfo,\n  ContactItem,\n  ContactList,\n  DeleteContactBtn,\n  FilterErrorMessage,\n} from './Contacts.styled';\n\nimport { selectFilters } from '../../redux/filter/slice';\nimport { selectContacts } from '../../redux/contacts/slice';\nimport { deleteContact } from '../../redux/contacts/operation';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactList>\n      {filteredContacts.length !== 0 ? (\n        filteredContacts.map(item => (\n          <ContactItem key={item.id}>\n            <ContactInfo>\n              <span>&#128100;</span>\n              <span>\n                {item.name}: {item.number}\n              </span>\n            </ContactInfo>\n            <DeleteContactBtn type=\"button\" onClick={() => dispatch(deleteContact(item.id))}>\n              Delete\n            </DeleteContactBtn>\n          </ContactItem>\n        ))\n      ) : (\n        <FilterErrorMessage>Could not find contacts with this name!</FilterErrorMessage>\n      )}\n    </ContactList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PhonebookWrapper = styled.div`\n  margin: 0 40px 40px 40px;\n`;\n\nexport const Title = styled.h1`\n  margin: 40px 0 20px 0;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 20px 0;\n`;\n","import styled from 'styled-components';\n\nexport const FilterWrpper = styled.div`\n  display: flex;\n  align-content: flex-end;\n  gap: 20px;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  font-size: 16px;\n`;\n\nexport const ResetBtn = styled.button`\n  align-self: flex-end;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: silver;\n  padding: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  color: white;\n  background-color: #806491;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { FilterInput, FilterLabel, FilterWrpper, ResetBtn } from './Filter.styled';\n\nimport { changeFilter, resetFilter, selectFilters } from '../../redux/filter/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <FilterWrpper>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </FilterLabel>\n      <ResetBtn type=\"button\" onClick={() => dispatch(resetFilter())}>\n        Reset\n      </ResetBtn>\n    </FilterWrpper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { PhonebookWrapper, Subtitle, Title } from './Phonebook.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { selectContacts, selectError, selectIsLoading } from '../../redux/contacts/slice';\nimport { fetchContacts } from '../../redux/contacts/operation';\n\nexport const Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    toast.error('Something went wrong! Reload page or try again later.');\n  }\n\n  return (\n    <PhonebookWrapper>\n      <Title className=\"text-center font-bold text-4xl\">Phonebook</Title>\n      <ContactForm />\n      <Subtitle>Contacts ({contacts.length})</Subtitle>\n      <Filter />\n      {contacts.length ? <Contacts /> : <p>No contacts</p>}\n    </PhonebookWrapper>\n  );\n};\n","import { Phonebook } from 'components/Phonebook/Phonebook';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","InputLabel","_templateObject2","Input","_templateObject3","FormButton","_templateObject4","ContactForm","_useForm","useForm","register","handleSubmit","reset","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","onSubmit","data","name","isExist","find","contact","toLowerCase","alert","concat","findContact","addContact","children","_jsx","_objectSpread","type","required","placeholder","minLength","maxLength","ContactList","ContactItem","ContactInfo","DeleteContactBtn","FilterErrorMessage","_templateObject5","Contacts","filter","selectFilters","filteredContacts","includes","length","map","item","number","onClick","deleteContact","id","PhonebookWrapper","Title","Subtitle","FilterWrpper","FilterLabel","FilterInput","ResetBtn","Filter","value","onChange","e","changeFilter","target","resetFilter","Phonebook","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","toast","className"],"sourceRoot":""}