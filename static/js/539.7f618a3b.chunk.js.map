{"version":3,"file":"static/js/539.7f618a3b.chunk.js","mappings":"6QAOaA,EAAc,WACzB,IAAAC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAC1BC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAYC,SAAUT,GAPzB,SAAAU,ICZU,SAACC,EAAMT,GAChC,IAAMU,EAAUV,EAASW,MACvB,SAAAC,GAAO,OAAIA,EAAQH,KAAKI,gBAAkBJ,EAAKI,aAAa,IAO9D,OAJIH,GACFI,MAAM,GAADC,OAAIN,EAAI,6BAGRC,CACT,EDGQM,CAAYR,EAAKC,KAAMT,KAC3BG,GAASc,EAAAA,EAAAA,IAAWT,IACpBT,IACF,IAG6DmB,SAAA,EACzDb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcY,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOb,UAAU,QAAOY,UACtBC,EAAAA,EAAAA,KAAA,QAAMb,UAAU,kCAAiCY,SAAC,aAEpDC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMvB,EAAS,SAAO,IACpBwB,KAAK,OACLC,YAAY,qBACZhB,UAAU,uBACViB,UAAW,EACXC,UAAQ,SAGZnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcY,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOb,UAAU,QAAOY,UACtBC,EAAAA,EAAAA,KAAA,QAAMb,UAAU,kCAAiCY,SAAC,gBAEpDC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMvB,EAAS,WAAS,IACtBwB,KAAK,MACLE,UAAW,EACXE,UAAW,GACXH,YAAY,qBACZhB,UAAU,uBACVkB,UAAQ,SAGZL,EAAAA,EAAAA,KAAA,OAAKb,UAAU,oBAAmBY,UAChCC,EAAAA,EAAAA,KAAA,UAAQb,UAAU,sCAAqCY,SAAC,oBAIhE,E,UE9CaQ,EAAW,WACtB,IAAM1B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvByB,GAAS1B,EAAAA,EAAAA,IAAY2B,EAAAA,IACrBzB,GAAWC,EAAAA,EAAAA,MAMXyB,EAHG7B,EAAS2B,QAAO,SAAAf,GAAO,OAAIA,EAAQH,KAAKI,cAAciB,SAASH,EAAOd,cAAc,IAK7F,OACEM,EAAAA,EAAAA,KAAA,MAAIb,UAAU,gDAA+CY,SAC9B,IAA5BW,EAAiBE,OAChBF,EAAiBG,KAAI,SAAAC,GAAI,OACvBd,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKb,UAAU,+CAA8CY,UAC3Db,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBY,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKb,UAAU,2BAA0BY,UACvCC,EAAAA,EAAAA,KAAA,UACEb,UAAU,wBACVe,KAAK,SACLa,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcF,EAAKG,IAAI,EAAClB,UAEhDC,EAAAA,EAAAA,KAAA,OACEkB,MAAM,6BACN/B,UAAU,UACVgC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAActB,UAErBC,EAAAA,EAAAA,KAAA,QACEsB,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,gCAKVvC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBY,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAK0B,MAAM,qBAAoB3B,UAC7BC,EAAAA,EAAAA,KAAA,OAAK0B,MAAM,qDAAoD3B,UAC7DC,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAKxB,KAAK,UAGrBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBY,SAAA,EAClCC,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAKxB,QACZU,EAAAA,EAAAA,KAAA,QAAAD,SAAOe,EAAKa,qBAjCbb,EAAKG,GAsCT,KAGPjB,EAAAA,EAAAA,KAAA,MAAIb,UAAU,sBAAqBY,SAAC,6CAI5C,EC9Da6B,EAAS,WACpB,IAAM5C,GAAWC,EAAAA,EAAAA,MACXuB,GAAS1B,EAAAA,EAAAA,IAAY2B,EAAAA,IAE3B,OACEvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBY,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIb,UAAU,uBAAsBY,SAAC,2BACrCb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BY,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SACEb,UAAU,cACVe,KAAK,OACL2B,MAAOrB,EACPsB,SAAU,SAAAC,GAAC,OAAI/C,GAASgD,EAAAA,EAAAA,IAAaD,EAAEE,OAAOJ,OAAO,KAGvD7B,EAAAA,EAAAA,KAAA,UACEb,UAAU,sCACVe,KAAK,SACLa,QAAS,kBAAM/B,GAASkD,EAAAA,EAAAA,MAAc,EAACnC,SACxC,eAMT,E,UCjBaoC,EAAY,WACvB,IAAMC,GAAYtD,EAAAA,EAAAA,IAAYuD,EAAAA,IACxBC,GAAQxD,EAAAA,EAAAA,IAAYyD,EAAAA,IACpB1D,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAuD,EAAAA,EAAAA,YAAU,WACRxD,GAASyD,EAAAA,EAAAA,MACX,GAAG,CAACzD,IAEAoD,GACKpC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,KAGZJ,GACFK,EAAAA,GAAAA,MAAY,0DAIZ3C,EAAAA,EAAAA,KAAA,OAAKb,UAAU,4BAA2BY,UACxCb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BY,SAAA,EAC1Cb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBY,SAAA,EAC7BC,EAAAA,EAAAA,KAACzB,EAAW,KACZyB,EAAAA,EAAAA,KAAC4B,EAAM,OAER/C,EAAS+B,QACRZ,EAAAA,EAAAA,KAACO,EAAQ,KAETP,EAAAA,EAAAA,KAAA,MAAIb,UAAU,gCAA+BY,SAAC,qBAKxD,ECnCA,EARqB,WACnB,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACmC,EAAS,KAGhB,C","sources":["components/ContactForm/ContactForm.jsx","helpers/findContact.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { findContact } from 'helpers/findContact';\nimport { selectContacts } from '../../redux/contacts/slice';\nimport { addContact } from '../../redux/contacts/operation';\n\nexport const ContactForm = () => {\n  const { register, handleSubmit, reset } = useForm();\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const submit = data => {\n    if (findContact(data.name, contacts)) return;\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <form className=\"card-body\" onSubmit={handleSubmit(submit)}>\n      <div className=\"form-control\">\n        <label className=\"label\">\n          <span className=\"label-text text-white font-bold\">Email</span>\n        </label>\n        <input\n          {...register('name')}\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          className=\"input input-bordered\"\n          minLength={3}\n          required\n        />\n      </div>\n      <div className=\"form-control\">\n        <label className=\"label\">\n          <span className=\"label-text text-white font-bold\">Password</span>\n        </label>\n        <input\n          {...register('number')}\n          type=\"tel\"\n          minLength={9}\n          maxLength={13}\n          placeholder=\"Enter phone number\"\n          className=\"input input-bordered\"\n          required\n        />\n      </div>\n      <div className=\"form-control mt-6\">\n        <button className=\"btn bg-[#ffd300] hover:bg-[#ffa902]\">Add contact</button>\n      </div>\n    </form>\n  );\n};\n","export const findContact = (name, contacts) => {\n  const isExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  if (isExist) {\n    alert(`${name} is already in contacts.`);\n  }\n\n  return isExist;\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilters } from '../../redux/filter/slice';\nimport { selectContacts } from '../../redux/contacts/slice';\nimport { deleteContact } from '../../redux/contacts/operation';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ul className=\"flex gap-12 flex-wrap mt-[80px] text-lg px-10\">\n      {filteredContacts.length !== 0 ? (\n        filteredContacts.map(item => (\n          <li key={item.id}>\n            <div className=\"card w-72 bg-base-100 shadow-xl p-1 min-h-40\">\n              <div className=\"card-body p-2.5\">\n                <div className=\"card-actions justify-end\">\n                  <button\n                    className=\"btn btn-square btn-sm\"\n                    type=\"button\"\n                    onClick={() => dispatch(deleteContact(item.id))}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-6 w-6\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n                <div className=\"flex gap-6 items-center\">\n                  <div class=\"avatar placeholder\">\n                    <div class=\" text-neutral-content rounded-full w-16 bg-primary\">\n                      <span>{item.name[0]}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col gap-1\">\n                    <span>{item.name}</span>\n                    <span>{item.number}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        ))\n      ) : (\n        <h2 className=\"text-2xl text-white\">Could not find contacts with this name!</h2>\n      )}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { changeFilter, resetFilter, selectFilters } from '../../redux/filter/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <div className=\"flex flex-col mt-4 px-7\">\n      <h2 className=\"text-white font-bold\">Find contacts by name</h2>\n      <div className=\"flex flex-row gap-5 py-6\">\n        <input\n          className=\"px-3.5 w-80\"\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n\n        <button\n          className=\"btn bg-[#ffd300] hover:bg-[#ffa902]\"\n          type=\"button\"\n          onClick={() => dispatch(resetFilter())}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { selectContacts, selectError, selectIsLoading } from '../../redux/contacts/slice';\nimport { fetchContacts } from '../../redux/contacts/operation';\n\nexport const Phonebook = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    toast.error('Something went wrong! Reload page or try again later.');\n  }\n\n  return (\n    <div className=\" min-h-screen bg-neutral \">\n      <div className=\"flex flex-row justify-start\">\n        <div className=\"p-2.5 max-w-md\">\n          <ContactForm />\n          <Filter />\n        </div>\n        {contacts.length ? (\n          <Contacts />\n        ) : (\n          <h2 className=\"text-2xl mt-[80px] text-white\">No contacts</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Phonebook } from 'components/Phonebook/Phonebook';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","_useForm","useForm","register","handleSubmit","reset","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","className","onSubmit","data","name","isExist","find","contact","toLowerCase","alert","concat","findContact","addContact","children","_jsx","_objectSpread","type","placeholder","minLength","required","maxLength","Contacts","filter","selectFilters","filteredContacts","includes","length","map","item","onClick","deleteContact","id","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","class","number","Filter","value","onChange","e","changeFilter","target","resetFilter","Phonebook","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","toast"],"sourceRoot":""}